#!/bin/csh -f
# ---------------------------------------- 
# PE LAYOUT: 
#   total number of tasks  = 45600 
#   maximum threads per task = 1 
#   cpl ntasks=14400  nthreads=1 rootpe=14400 ninst=1 
#   cam ntasks=28800  nthreads=1 rootpe=0 ninst=1 
#   clm ntasks=1200  nthreads=1 rootpe=0 ninst=1 
#   cice ntasks=9600  nthreads=1 rootpe=1200 ninst=1 
#   pop2 ntasks=16800  nthreads=1 rootpe=28800 ninst=1 
#   sglc ntasks=1  nthreads=1 rootpe=0 ninst=1 
#   swav ntasks=1  nthreads=1 rootpe=0 ninst=1 
#   rtm ntasks=1200  nthreads=1 rootpe=0 ninst=1 
#   
#   total number of hw pes = 45600 
#     cpl hw pe range ~ from 14400 to 28799 
#     cam hw pe range ~ from 0 to 28799 
#     clm hw pe range ~ from 0 to 1199 
#     cice hw pe range ~ from 1200 to 10799 
#     pop2 hw pe range ~ from 28800 to 45599 
#     sglc hw pe range ~ from 0 to 0 
#     swav hw pe range ~ from 0 to 0 
#     rtm hw pe range ~ from 0 to 1199 
# ---------------------------------------- 
cd /home/export/online1/cesm06/dxh/workspace/cesm1_3_beta17_sehires31_newscripts/cases/test87_79newocn190419

./Tools/ccsm_check_lockedfiles || exit -1
source ./Tools/ccsm_getenv     || exit -2

if ($BUILD_COMPLETE != "TRUE") then
  echo "BUILD_COMPLETE is not TRUE"
  echo "Please rebuild the model interactively"
  exit -2
endif

# BATCHQUERY is in env_run.xml
setenv LBQUERY "TRUE"
if !($?BATCHQUERY) then
  setenv LBQUERY "FALSE"
  setenv BATCHQUERY "undefined"
else if ( "$BATCHQUERY" == 'UNSET' ) then
  setenv LBQUERY "FALSE"
  setenv BATCHQUERY "undefined"
endif

# BATCHSUBMIT is in env_run.xml
setenv LBSUBMIT "TRUE"
if !($?BATCHSUBMIT) then
  setenv LBSUBMIT "FALSE"
  setenv BATCHSUBMIT "undefined"
else if ( "$BATCHSUBMIT" == 'UNSET' ) then
  setenv LBSUBMIT "FALSE"
  setenv BATCHSUBMIT "undefined"
endif

# --- Create and cleanup the timing directories---

if !(-d $RUNDIR) mkdir -p $RUNDIR || "cannot make $RUNDIR" && exit -1
if (-d $RUNDIR/timing) rm -r -f $RUNDIR/timing
mkdir $RUNDIR/timing
mkdir $RUNDIR/timing/checkpoints

# --- Determine time-stamp/file-ID string ---
setenv LID "`date +%y%m%d-%H%M%S`"

set sdate = `date +"%Y-%m-%d %H:%M:%S"`
echo "run started $sdate" >>& $CASEROOT/CaseStatus

echo "-------------------------------------------------------------------------"
echo " CESM BUILDNML SCRIPT STARTING"
echo " - To prestage restarts, untar a restart.tar file into $RUNDIR"

cd $CASEROOT
./preview_namelists 
if ($status != 0) then
   echo "ERROR from preview namelist - EXITING"
   exit -1
endif

echo " CESM BUILDNML SCRIPT HAS FINISHED SUCCESSFULLY"
echo "-------------------------------------------------------------------------"

echo "-------------------------------------------------------------------------"
echo " CESM PRESTAGE SCRIPT STARTING"
echo " - Case input data directory, DIN_LOC_ROOT, is $DIN_LOC_ROOT"
echo " - Checking the existence of input datasets in DIN_LOC_ROOT"

# This script prestages as follows
# - DIN_LOC_ROOT is the local inputdata area, check it exists
# - check whether all the data is in DIN_LOC_ROOT
# - prestage the REFCASE data if needed

cd $CASEROOT

if !(-d $DIN_LOC_ROOT) then
  echo " "
  echo "  ERROR DIN_LOC_ROOT $DIN_LOC_ROOT does not exist"
  echo " "
  exit -20
endif

if (`./check_input_data -inputdata $DIN_LOC_ROOT -check | grep "unknown" | wc -l` > 0) then
   echo " "
   echo 'Any files with "status unknown" below were not found in the'
   echo 'expected location, and are not from the input data repository.'
   echo 'This is informational only; this script will not attempt to'
   echo 'find these files. If CESM can find (or does not need) these files'
   echo 'at run time, no error will result.'
   ./check_input_data -inputdata $DIN_LOC_ROOT -check
   echo " "
endif

if (`./check_input_data -inputdata $DIN_LOC_ROOT -check | grep "missing" | wc -l` > 0) then
   echo "Attempting to download missing data:"
   ./check_input_data -inputdata $DIN_LOC_ROOT -export
endif 

if (`./check_input_data -inputdata $DIN_LOC_ROOT -check | grep "missing" | wc -l` > 0) then
   echo " "
   echo "The following files were not found, they are required"
   ./check_input_data -inputdata $DIN_LOC_ROOT -check
   echo "Invoke the following command to obtain them"
   echo "   ./check_input_data -inputdata $DIN_LOC_ROOT -export"
   echo " "
   exit -30
endif

if (($GET_REFCASE == 'TRUE') && ($RUN_TYPE != 'startup') && ($CONTINUE_RUN == 'FALSE')) then
  set refdir = "ccsm4_init/$RUN_REFCASE/$RUN_REFDATE"

  if !(-d $DIN_LOC_ROOT/$refdir) then
    echo "*****************************************************************"
    echo "ccsm_prestage ERROR: $DIN_LOC_ROOT/$refdir is not on local disk"
    echo "obtain this data from the svn input data repository:"
    echo "  > mkdir -p $DIN_LOC_ROOT/$refdir"
    echo "  > cd $DIN_LOC_ROOT/$refdir"
    echo "  > cd .."
    echo "  > svn export --force https://svn-ccsm-inputdata.cgd.ucar.edu/trunk/inputdata/$refdir"
    echo "or set GET_REFCASE to FALSE in env_run.xml, "
    echo "   and prestage the restart data to $RUNDIR manually"
    echo "*****************************************************************"
    exit -1
  endif 

  echo " - Prestaging REFCASE ($refdir) to $RUNDIR"
  if !(-d $RUNDIR) mkdir -p $RUNDIR || "cannot make $RUNDIR" && exit -1
  foreach file ($DIN_LOC_ROOT/$refdir/*${RUN_REFCASE}*) 
     if !(-f $RUNDIR/$file:t) then
        ln -s $file $RUNDIR || "cannot prestage $DIN_LOC_ROOT/$refdir data to $RUNDIR" && exit -1
     endif
  end
  cp $DIN_LOC_ROOT/$refdir/*rpointer* $RUNDIR || "cannot prestage $DIN_LOC_ROOT/$refdir rpointers to $RUNDIR" && exit -1

  cd $RUNDIR
  set cam2_list = `sh -c 'ls *.cam2.* 2>/dev/null'`
  foreach cam2_file ($cam2_list)
    set cam_file = `echo $cam2_file | sed -e 's/cam2/cam/'`
    ln -fs $cam2_file $cam_file
  end

  chmod u+w $RUNDIR/* >& /dev/null
endif
cd $CASEROOT

echo " CESM PRESTAGE SCRIPT HAS FINISHED SUCCESSFULLY"
echo "-------------------------------------------------------------------------"

echo "-------------------------------------------------------------------------"
echo " CESM BUILDNML SCRIPT STARTING"
echo " - To prestage restarts, untar a restart.tar file into $RUNDIR"

cd $CASEROOT
./preview_namelists 
if ($status != 0) then
   echo "ERROR from preview namelist - EXITING"
   exit -1
endif

echo " CESM BUILDNML SCRIPT HAS FINISHED SUCCESSFULLY"
echo "-------------------------------------------------------------------------"
#run the model
cd $RUNDIR
setenv SUBSTAT "`bsub -debug -p -q $qname -J test87_79newocn190419 -n 45600 -np 4 -cgsp 64 -b -host_stack 128 -share_size 5800 -priv_size 16 -o $RUNDIR/cesm.log.$LID $EXEROOT/cesm.exe`"

echo $SUBSTAT
setenv JOBID `echo $SUBSTAT |& grep -o 'Job <[0-9]*>' |& grep -o '[0-9]*'`
#setenv JOBID "`echo $SUBSTAT | grep -o 'Job <[0-9]*>' | grep -o '[0-9]*'`"
wait
echo $JOBID > $CASEROOT/submissions/$LID
echo "`date` -- JOB $JOBID($LID) HAS BEEN SUBMITTED"

